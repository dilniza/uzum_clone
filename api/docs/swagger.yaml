definitions:
  category_service.Category:
    properties:
      active:
        type: boolean
      created_at:
        type: string
      deleted_at:
        type: integer
      id:
        type: string
      name_en:
        type: string
      name_ru:
        type: string
      name_uz:
        type: string
      order_no:
        type: integer
      parent_id:
        type: string
      slug:
        type: string
      updated_at:
        type: string
    type: object
  category_service.CreateCategory:
    properties:
      active:
        type: boolean
      name_en:
        type: string
      name_ru:
        type: string
      name_uz:
        type: string
      order_no:
        type: integer
      parent_id:
        type: string
      slug:
        type: string
    type: object
  category_service.Empty:
    type: object
  category_service.GetListCategoryRequest:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      search:
        type: string
    type: object
  category_service.GetListCategoryResponse:
    properties:
      Categorys:
        items:
          $ref: '#/definitions/category_service.Category'
        type: array
      Count:
        type: integer
    type: object
  category_service.UpdateCategory:
    properties:
      active:
        type: boolean
      id:
        type: string
      name_en:
        type: string
      name_ru:
        type: string
      name_uz:
        type: string
      order_no:
        type: integer
      parent_id:
        type: string
      slug:
        type: string
    type: object
  models.ResponseError:
    properties:
      error: {}
    type: object
info:
  contact: {}
paths:
  /category:
    post:
      consumes:
      - application/json
      description: API for creating a category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category_service.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category_service.Category'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Create a category
      tags:
      - category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: API for deleting a category by ID
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category_service.Empty'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Delete a category by ID
      tags:
      - category
    get:
      consumes:
      - application/json
      description: API for getting a single category by ID
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category_service.Category'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get a single category by ID
      tags:
      - category
    put:
      consumes:
      - application/json
      description: API for updating a category by ID
      parameters:
      - description: category ID
        in: path
        name: id
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category_service.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category_service.Category'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Update a category by ID
      tags:
      - category
  /getlistCategory:
    post:
      consumes:
      - application/json
      description: API for getting list categories
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/category_service.GetListCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category_service.GetListCategoryResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ResponseError'
      security:
      - ApiKeyAuth: []
      summary: Get List Categories
      tags:
      - category
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
